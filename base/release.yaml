apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: {{ index . "namespace" }}
spec:
  serviceAccountName: {{ index . "serviceAccountName" }}
  releaseName: vaultwarden
  chart:
    spec:
      chart: app-template
      version: "0.2.1"
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
  interval: 30m
  install:
    remediation:
      retries: 3
  test:
    enable: false
  values:
    image:
      repository: vaultwarden/server
      pullPolicy: IfNotPresent
      tag: 1.25.2
    strategy:
      type: Recreate
    service:
      main:
        ports:
          http:
            port: 80
          websocket:
            enabled: true
            port: 3012
    ingress:
      main:
        {{- if and (index . "isNginxInstalled") (index . "isDomainInstalled") }}
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
        hosts:
          - host: vaultwarden.{{ index . "domain"}}
            paths:
              - path: "/"
                pathType: Prefix
              - path: /notifications/hub/negotiate
                pathType: Prefix
                service:
                  port: http
              - path: /notifications/hub
                pathType: Prefix
                service:
                  port: websocket
        {{- else }}
        enable: false
        {{- end }}
        {{- if and (index . "isNginxInstalled") (index . "isDomainInstalled") (index . "isCertManagerInstalled") }}
        tls:
          - secretName: vaultwarden-cert
            hosts:
              - vaultwarden.{{ index . "domain"}}
        {{- end }}
    persistence:
      config:
        enabled: true
        type: pvc
        accessMode: ReadWriteOnce
        size: 2Gi
        mountPath: /data
    env:
      DATA_FOLDER: "/data"
      LOG_FILE: "/data/vaultwarden.log"
      SIGNUPS_ALLOWED: false
      ADMIN_TOKEN:
        valueFrom:
          secretKeyRef:
            name: vaultwarden-admin-token
            key: token
      {{- if and (index . "isNginxInstalled") (index . "isDomainInstalled") (index . "isCertManagerInstalled") }}
      DOMAIN: https://vaultwarden.{{ index . "domain"}}
      {{- else if (index . "isDomainInstalled") }}
      DOMAIN: http://vaultwarden.{{ index . "domain"}}
      {{- end }}
      {{- if index . "isSmtpServerInstalled" }}
      SMTP_HOST:
        valueFrom:
          secretKeyRef:
            name: smtp-secret
            key: host
      MAIL_FROM_ADDRESS: noreply
      MAIL_DOMAIN:
        valueFrom:
          secretKeyRef:
            name: smtp-secret
            key: domain
      SMTP_FROM: $(MAIL_FROM_ADDRESS)@$(MAIL_DOMAIN)
      SMTP_PORT:
        valueFrom:
          secretKeyRef:
            name: smtp-secret
            key: port
      SMTP_SECURITY: {{ if eq (index . "smtpSecure" | b64dec) "ssl"}}force_tls{{ else if eq (index . "smtpSecure" | b64dec) "explicit_tls"}}starttls{{ else }}off{{ end }}
      SMTP_USERNAME:
        valueFrom:
          secretKeyRef:
            name: smtp-secret
            key: username
      SMTP_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: smtp-secret
            key: password
      {{- end }}

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: {{ index . "namespace" }}
spec:
  serviceAccountName: {{ index . "serviceAccountName" }}
  releaseName: vaultwarden
  chart:
    spec:
      chart: vaultwarden
      version: "5.3.2"
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
  interval: 30m
  install:
    remediation:
      retries: 3
  test:
    enable: false
  values:
    ingress:
      main:
        {{- if index . "isNginxInstalled" }}
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
        hosts:
          - host: vaultwarden.{{ index . "domain"}}
            paths:
              - path: "/"
                pathType: Prefix
        {{- else }}
        enable: false
        {{- end }}
        {{- if and (index . "isNginxInstalled") (index . "isCertManagerInstalled") }}
        tls:
          - secretName: vaultwarden-cert
            hosts:
              - vaultwarden.{{ index . "domain"}}
        {{- end }}
    persistence:
      config:
        enabled: true
        type: emptyDir
    env:
      DATA_FOLDER: "/data"
      SIGNUPS_ALLOWED: false
      ADMIN_TOKEN:
        valueFrom:
          secretKeyRef:
            name: vaultwarden-admin-token
            key: token
      {{- if index . "isPostgresqlInstalled" }}
      DATABASE_URL: postgresql://postgres@{{ index . "postgresqlName"}}.{{ index . "postgresqlNamespace"}}.svc.cluster.local:5432/vaultwarden
      PGPASSWORD:
        valueFrom:
          secretKeyRef:
            name: postgresql-secret
            key: postgres-password
      {{- end}}
      {{- if index . "isSmtpServerInstalled" }}
        - name: SMTP_HOST
          valueFrom:
            secretKeyRef:
              name: smtp-secret
              key: host
        - SMTP_FROM: noreply@openlizz.com
        - name: SMTP_PORT
          valueFrom:
            secretKeyRef:
              name: smtp-secret
              key: port
        - SMTP_SECURITY: starttls
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: smtp-secret
              key: username
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: smtp-secret
              key: password
      {{- end }}
  {{- if index . "isPostgresqlInstalled" }}
  postRenderers:
    - kustomize:
        patchesStrategicMerge:
          - kind: Deployment
            apiVersion: apps/v1
            metadata:
              name: vaultwarden-initdb
            spec:
              template:
                spec:
                  initContainers:
                    - name: "initdb"
                      image: "docker.io/bitnami/postgresql:11.3.0"
                      command: ["/bin/bash", "-c"]
                      args: ['echo $SQL > /tmp/init.sql; psql -f /tmp/init.sql --host {{ index . "postgresqlName"}}.{{ index . "postgresqlNamespace"}} -U postgres']
                      env:
                        - name: PGPASSWORD
                          valueFrom:
                            secretKeyRef:
                              name: postgresql-secret
                              key: postgres-password
                        - name: SQL
                          value: "select 'create database vaultwarden' where not exists (select from pg_database where datname = 'vaultwarden')\\gexec"
  {{- end}}
